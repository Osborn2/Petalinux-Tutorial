1. Petalinux stuck
  ... 0110
  (1) replace u-boot.elf && fsbl.elf in the platform - petalinux
  (2) booting processes


2. SDSoC project - 3D image rendering
  (1) BRAM size limitation - 16384 - how to figure this out?
      - 4 smaller arrays
      - some settings/pragmas
  (2) Build FIFO in SDSoC

ug902
#pragma AP interface ap_fifo port=data_i
#pragma AP interface ap_fifo port=data_o


*#pragma SDS data_mover (not used normally)
#pragma SDS data mem_attribute 
  a. sds_alloc: contiguous
  b. malloc: no-contiguous  
#pragma SDS data zero_copy :arrange a shared memory used for both reading and writing.
#pragma SDS data access_pattern(arguement : SEQUENTIAL | RANDOM)
we use sequential to allocate FIFO interface and use RANDOM to allocate BRAM interface.
*#pragma SDS buffer_depth
*#pragma SDS async
*#pragma SDS wait

#pragma HLS INLINE
#pragma HLS PIPELINE II=
#pragma HLS unroll factor=
#pragma HLS AP 
#pragma HLS dataflow
#pragma HLS array_shape

local memory: for a single function
shared memory: for several functions 
global memory: for all

arguements data type of hardware function: 8,16,32,64bit 

how to use contiguous memory:
sds_alloc(size_t size); // guarantees physically contiguous memory
sds_mmap(void *paddr, size_t size, void *vaddr); // paddr must point to
contiguous memory
sds_register_dmabuf(void *vaddr, int fd); // assumes physically contiguous
memory
#pragma SDS data mem_attribute (A:PHYSICAL_CONTIGUOUS) // default is
NON_PHYSICAL_CONTIGUOUS



